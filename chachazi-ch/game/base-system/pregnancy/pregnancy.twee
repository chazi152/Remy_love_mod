:: Pregnancy [widget]

<<widget "moveCreature">>
	/*0 -> _pregnancy.fetus[_i] or location (any but portable)*/
	/*1 -> Type*/
	/*2 -> locationId*/
	<<if _args[0] isnot null and _args[1]>>
		<<set _portable to $container.portable>>
		<<set _container to $container[$phase]>>
		<<set $_pregnancy to $sexStats[_args[3] or "anus"].pregnancy>>

		<<set _result to _args[1]>>
		<<switch _args[0]>>
			<<case 0 1 2 3>>
				<!-- With a number as argument 0, it takes the parasite of that argument in your current pregnancy item -->
				<<set _creature to clone($_pregnancy.fetus[_args[0]])>>
			<<default>>
				<!-- With a string as argument 0, it takes a parasite from the container matching the argument. Which parasite it takes corresponds to argument 2 -->
				<!-- Currently only used when transferring parasites for selling in :: Containers, inside a for loop -->
				<<if _args[2] isnot null>>
					<<set _creature to clone($container[_args[0]].creatures[_args[2]])>>
				<</if>>
		<</switch>>

		<<if _creature>>
			<<if _result is "destroy">>
				<!-- Simply gets rid of the parasite -->
				<<set _creature to null>>
				<<removeCreature _args[0] _args[2] _args[3]>>
			<<elseif _result is "portable">>
				<!-- Transfers the parasites for selling. The value of the parasite depends on its growth stat -->
				<<set _portable.creatures.push(clone(_creature))>>
				<<set _value to Math.floor(1000 / _creature.stats.growth)>>
				<<set _portable.value += _value>>
				<<removeCreature _args[0] _args[2] _args[3]>>
			<<elseif _result is "replace" and _args[2] isnot null and _args[0] gte 0 and _args[0] lte 3>>
				<!-- Replaces an existing parasite, for when you birth more than you can currently store -->
				<!-- The replaced parasite gets transferred for selling -->
				<<if _container.creatures[_i] isnot undefined>>
					<<if _container.creatures[_i] isnot null>>
						<<set _portable.creatures.push(clone(_container.creatures[_args[2]]))>>
						<<set _value to Math.floor(1000 / _container.creatures[_args[2]].stats.growth)>>
						<<set _portable.value += _value>>
						<<set _container.creatures[_args[2]] to clone(_creature)>>
						<<set _replaced to true>>
					<</if>>
				<</if>>
				<<if _replaced isnot true>>
					<<set _container.creatures[_args[2]] to clone(_creature)>>
					<<set _container.count += 1>>
				<</if>>
				<<removeCreature _args[0] undefined _args[3]>>
			<<elseif _result is "container">>
				<!-- Keeps the parasite and moves it to the current container -->
				<<set _moveTo to false>>
				<<for _containerSlot to 0; _containerSlot lt _container.maxCount; _containerSlot++>>
					<<if _container.creatures[_containerSlot] is undefined>>
						<<set _moveTo to true>>
					<<elseif _container.creatures[_containerSlot] is null>>
						<<set _moveTo to true>>
					<</if>>
					<<if _moveTo is true>>
						<<set $container[$phase].creatures[_containerSlot] to clone(_creature)>>
						<<set $container[$phase].count += 1>>
						<<removeCreature _args[0] _args[2] _args[3]>>
						<<break>>
					<</if>>
				<</for>>
			<</if>>
		<</if>>
	<</if>>
<</widget>>

<<widget "removeCreature">>
	<<if _args[0] isnot null>>
		<<set $_pregnancy to $sexStats[_args[2] or "anus"].pregnancy>>
		<<switch _args[0]>>
			<<case 0 1 2 3>>
				<!-- With a number as argument 0, it removes the parasite of that argument in your current pregnancy item -->
				<<set $_pregnancy.fetus[_args[0]].toDelete to true>>
				<<set $_pregnancy.parasiteBirthEvents += 1>>
				<<if $_pregnancy.motherStatus is 0 and $_pregnancy.parasiteBirthEvents gte 3>>
					<<set $_pregnancy.motherStatus to 1>>
				<</if>>
			<<default>>
				<!-- With a string as argument 0, it removes a parasite from the container matching the argument. Which parasite it takes corresponds to argument 1 -->
				<<if _args[1] isnot null>>
					<<set $container[_args[0]].creatures[_args[1]] to null>>
					<<set $container[_args[0]].count -= 1>>
				<</if>>
		<</switch>>
	<</if>>
<</widget>>

<<widget "clearToDeleteParasiteFetus">>
	<<if $sexStats.anus.pregnancy.type is "parasite">>
		<<run $sexStats.anus.pregnancy.fetus to $sexStats.anus.pregnancy.fetus.filter(child => child && !child.toDelete)>>
		<<if $sexStats.anus.pregnancy.fetus.length is 0>>
			<<set $sexStats.anus.pregnancy.type to null>>
		<</if>>
	<</if>>
	<<if $sexStats.vagina.pregnancy.type is "parasite">>
		<<run $sexStats.vagina.pregnancy.fetus to $sexStats.vagina.pregnancy.fetus.filter(child => child && !child.toDelete)>>
		<<if $sexStats.vagina.pregnancy.fetus.length is 0>>
			<<set $sexStats.vagina.pregnancy.type to null>>
		<</if>>
	<</if>>
<</widget>>

<<widget "menstruationCycleState">>
	<<set $sexStats.vagina.menstruation.running to $player.vaginaExist or (!$player.vaginaExist and $skin and $skin.pubic.pen is "magic" and $skin.pubic.special is "pregnancy")>>
<</widget>>

<<widget "menstruationCycle">>
	<<set _menstruation to $sexStats.vagina.menstruation>>
	<<if _args[0] is "daily">>/*Daily cycle*/
		<<set _menstruation.nonCycleRng.push(random(0,6))>>
		<<set _menstruation.nonCycleRng.deleteAt(0)>>
	<<elseif _args[0] is "overdose">>/*Daily cycle*/
		<<set _menstruation.nonCycleRng[0] to 0>>
	<</if>>

	<<menstruationCycleState>>

	<<if _menstruation.running is true>>
		<<set [$_pregnancy, $_pregLocation] to getPregnancyObject("pc", true)>>
		<<set _pills to $sexStats.pills>>
		<<switch _menstruation.currentState>>
			<<case "normal">>
				<<if $cycledisable is "t">>
					<<playerPregnancyAttempt `Math.pow(4,_menstruation.nonCycleRng[0])` $_pregLocation>>
				<<elseif _menstruation.currentDay lt _menstruation.currentDaysMax>>
					/*Continue the cycle again*/
					<<if _menstruation.currentDay gte _menstruation.currentDaysMax / 2 and _menstruation.lastDaysMax isnot _menstruation.currentDaysMax>>
					<</if>>
					<<if _menstruation.currentDay lt _menstruation.stages[1]>>
						/*Menstrual phase - period occurs right at the start of this part*/
						<<if _pills.pills["fertility booster"].doseTaken gte 2>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if $skin.pubic.type is "magic" and $skin.pubic.special is "pregnancy">>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if (_pills.pills["contraceptive"].doseTaken gte 1 and random(0,100) gte 50) or _pills.pills["contraceptive"].doseTaken gte 2>>
						<<else>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
					<<elseif _menstruation.currentDay lt _menstruation.stages[2]>>
						/*Follicular phase*/
						<<if _pills.pills["fertility booster"].doseTakenn gte 2 and _menstruation.currentDay lt _menstruation.stages[2]>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if $skin.pubic.type is "magic" and $skin.pubic.special is "pregnancy" and _menstruation.currentDay lt _menstruation.stages[2]>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if _menstruation.currentDay lt _menstruation.stages[2]>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						/*Check for pregnancy at a reduced chance for a few days before*/
						<<if _menstruation.currentDay gte _menstruation.stages[3] - 4>>
							<<set $_multi = Math.clamp(Math.ceil(6 * (1 + _menstruation.stages[3] - _menstruation.currentDay)),6,30)>>
							<<playerPregnancyAttempt $_multi $_pregLocation>>
						<</if>>
					<<elseif _menstruation.currentDay lt _menstruation.stages[3]>>
						/*Ovulation phase*/
						<<set _menstruation.currentDay += 0.5>>
						<<set _menstruation.lastDaysMax to _menstruation.currentDaysMax>>

						/*Check for pregnancy*/
						<<playerPregnancyAttempt 3 $_pregLocation>>
					<<else>>
						/*Luteal phase*/
						/*Check for pregnancy at a reduced chance for a few days after*/
						<<if _menstruation.currentDay lte _menstruation.stages[3] + 4>>
							<<set $_multi = Math.clamp(Math.ceil(6 * (1 + _menstruation.currentDay - _menstruation.stages[3])),6,30)>>
							<<playerPregnancyAttempt $_multi $_pregLocation>>
						<</if>>
						<<if _pills.pills["fertility booster"].doseTaken gte 2>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if $skin.pubic.type is "magic" and $skin.pubic.special is "pregnancy">>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if (_pills.pills["contraceptive"].doseTaken gte 1 and random(0,100) gte 50) or _pills.pills["contraceptive"].doseTaken gte 2>>
						<<else>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
					<</if>>
				<<else>>
					/*Start the cycle again*/
					<<restartMenstruationCycle>>
					<<set _menstruation.periodEnabled to true>>
				<</if>>
			<<case "pregnant">>
				/*To progress as normal so that the heat cycle and pregnancy risk still works as normal, will be reset in the recovering stage*/
				<<if _menstruation.currentDay lt _menstruation.currentDaysMax>>
					<<if (_pills.pills["contraceptive"].doseTaken gte 1 and random(0,100) gte 50) or _pills.pills["contraceptive"].doseTaken gte 2>>
					<<else>>
						<<set _menstruation.currentDay += 0.5>>
					<</if>>
					<<if _menstruation.currentDay lt _menstruation.currentDaysMax>>
						<<if $skin.pubic.type is "magic" and $skin.pubic.special is "pregnancy">>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if _pills.pills["fertility booster"].doseTaken gte 2>>
							<<set _menstruation.currentDay += 0.5>>
						<</if>>
						<<if _menstruation.currentDay gt _menstruation.currentDaysMax>>
							<<set _menstruation.currentDay to _menstruation.currentDaysMax>>
						<</if>>
					<</if>>
				<</if>>
				/*To deal with an issues that occured when players cheated with the bugged 'Clear current pregnancy'*/
				<<if !getPregnancyObject().type is null or getPregnancyObject().type is "parasite">>
					<<restartMenstruationCycle>>
					<<set _menstruation.currentState to "normal">>
					<<set _menstruation.recoveryTime to null>>
					<<set _menstruation.recoveryTimeStart to null>>
					<<set _menstruation.recoveryStage to null>>
				<</if>>
			<<case "recovering">>
				<<set _menstruation.recoveryTime -= 0.5>>
				<<switch _pills.pills["fertility booster"].doseTaken>>
					<<case 1>><<set _menstruation.recoveryTime -= 0.5>>
					<<case 2 3 4>><<set _menstruation.recoveryTime -= 1>>
				<</switch>>
				<<if $skin.pubic.type is "magic" and $skin.pubic.special is "pregnancy">>
					<<set _menstruation.recoveryTime -= 0.5>>
				<</if>>
				<<if $_pregnancy.totalBirthEvents gt 2>>
					<<set _menstruation.recoveryTime -= 0.5>>
				<</if>>
				<<set _menstruation.recoveryStage to Math.floor((1 - (_menstruation.recoveryTime / _menstruation.recoveryTimeStart))*5)>>
				<<if _menstruation.recoveryTime lte 0>>
					<<set $effectsmessage to 1>>
					<<set $recovered_from_pregnancy to 1>>
					/*Ready to give birth again*/
					<<restartMenstruationCycle>>
					<<set _menstruation.currentState to "normal">>
					<<set _menstruation.recoveryTime to null>>
					<<set _menstruation.recoveryTimeStart to null>>
					<<set _menstruation.recoveryStage to null>>
				<</if>>
		<</switch>>
	<</if>>
	<<updateRecordedSperm "vagina" "pc" 0.5>>
	<<updateRecordedSperm "anus" "pc" 0.5>>
<</widget>>

<<widget "rutCycle">>
	<<if $player.penisExist and ($wolfgirl gte 2 or $cat gte 2 or $cow gte 2 or $fox gte 2)>>
		<<if !$player.beastRut>>
			<<set $player.beastRut to 0>>
		<</if>>
		<<set $_pills = $sexStats.pills.pills>>
		<<if $wolfgirl gte 2>>
			<<set $_changeReduction to $wolfbuild>>
		<<elseif $cat gte 2>>
			<<set $_changeReduction to $catbuild>>
		<<elseif $cow gte 2>>
			<<set $_changeReduction to $cowbuild>>
		<<elseif $fox gte 2>>
			<<set $_changeReduction to $foxbuild>>
		<</if>>
		<<set $player.beastRut += 1 + $_pills["fertility booster"].doseTaken>>

		<<if $player.beastRut gte random(30 - Math.ceil($_changeReduction / 5), 120 - Math.clamp($_changeReduction, 0, 100)) or _args[0] or $_pills["fertility booster"].doseTaken gt 2>>
			<<set $player.beastRut to 0>>
		<</if>>
	<<else>>
		<<run delete $player.beastRut>>
	<</if>>
<</widget>>

:: Pregnancy2 [widget]

<<widget "bodyPregCalc">>
	<<switch $bodysize>>
		<<case 0>><<set _bodySize to ["tiny","tiny","tiny","small","small","normal","large"]>>
		<<case 1>><<set _bodySize to ["tiny","tiny","small","small","small","normal","normal","large"]>>
		<<case 2>><<set _bodySize to ["tiny","small","small","normal","normal","normal","large","large"]>>
		<<case 3>><<set _bodySize to ["tiny","small","normal","normal","large","large","large"]>>
		<<default>>
	<</switch>>
	<<set _hairColour to [$naturalhaircolour, $naturalhaircolour, $naturalhaircolour, $naturalhaircolour,"red","jetblack","black","brown","burntorange","platinumblond","strawberryblond","ginger","ashyblond","blond"]>>
<</widget>>

/*Don't call outside of the menstruationCycle widget*/
<<widget "restartMenstruationCycle">>
	<<set $_menstruation to $sexStats.vagina.menstruation>>
	<<set $_menstruation.currentDay to 0.5>>
	<<set $_menstruation.currentDaysMax to $_menstruation.baseDays + random(0, $_menstruation.baseDaysRng)>>
	<<set _stage2 to Math.round($_menstruation.currentDaysMax * 0.17)>>
	<<if _stage2 gte 4>>
		<<set _stage2-->>
	<</if>>
	<<set _stage3 to Math.round($_menstruation.currentDaysMax * 0.5)>>
	<<if _stage3 lt 13>>
		<<set _stage3++>>
	<<elseif _stage3 gte 18>>
		<<set _stage3-->>
	<</if>>
	<<set $_menstruation.stages to [0, _stage2, _stage3, _stage3 + random(1,2) * 0.5]>>
<</widget>>

/* Used for the passage where the player has given birth in */
<<widget "playerPrebirth">>
	<<set getPregnancyObject().gaveBirth to true>>
<</widget>>

/*args[0] - mother, args[1] - birth location, args[2] - location of where the clildren should go to, _args[3] - next passage, _args[4] - time passage*/
<<widget "birthUi">>
	<<if _args[0] is "pc">>
		<<makeAwareOfDetails>>
		<<set _pregnancyBirth to getPregnancyObject()>>
	<<elseif C.npc[_args[0]]>>
		<<set _pregnancyBirth to getPregnancyObject(_args[0])>>
	<</if>>
	<<if _pregnancyBirth and _pregnancyBirth.fetus>>
		<<pregnancyFeats _args[0]>>
		<div id="birthUi">
			<<for _i to 0; _i lt _pregnancyBirth.fetus.length; _i++>>
				<<capture _i>>
					<div @id="'child-' + _i" class="childUi">
						<<birthChildElement _args[0] _i>>
					</div>
				<</capture>>
			<</for>>
		</div>
		<br>
		<<if _args[3]>>
			<<set _hours to Math.floor(_args[4] / 60)>>
			<<set _minutes to _args[4] % 60>>
			<<set _timeString to " (" + (_hours lt 10 ? "0": "") +_hours+":"+(_minutes lt 10 ? "0": "")+_minutes+")">>
		<</if>>
		<<link [["Next" + (_args[4] ? _timeString : "")|_args[3]]]>>
			<<if _args[0] is "pc">>
				<<run delete _pregnancyBirth.gaveBirth>>
				<<endPlayerPregnancy _args[1] _args[2]>>
			<<elseif $NPCNameList.includes(_args[0])>>
				<<endNpcPregnancy _args[0] _args[1] _args[2]>>
			<</if>>
		<</link>>
	<<else>>
		Error Pregnancy Object not found in the passage '<<print $passage>>'.
	<</if>>
<</widget>>

<<widget "pregnancyFeats">>
	<<if _args[0] is "pc">>
		<<earnFeat "Miracle of Life">>
		<<if _pregnancyBirth.potentialFathers.filter(npc => npc.type === T.pregnancyBirth.type).length gte 5>>
			<<earnFeat "Bicycle Mother">>
		<</if>>
		<<if _pregnancyBirth.type is "human" and _pregnancyBirth.fetus.length is 3>>
			<<earnFeat "Life Comes in Threes">>
		<</if>>
		<<if ($player.virginity.anal is true && !$player.vaginaExist) || ($player.virginity.vaginal is true && $player.vaginaExist)>>
			<<earnFeat "Hail Mary">>
		<</if>>
		<<if !$player.vaginaExist>>
			<<earnFeat "Life begins when you least expect">>
		<</if>>
	<</if>>
	<<if _args[0] isnot "pc">>
		<<if _pregnancyBirth.fetus[0].mother isnot "pc" && _pregnancyBirth.fetus[0].father is "pc">>
			<<earnFeat "First Fatherhood">>
		<</if>>
	<</if>>
<</widget>>

<<widget "birthChildElement">>
	<<if _pregnancyBirth>>
		<<capture _args>>
			<<if _pregnancyBirth.fetus[_args[1]].type isnot "human">>
				Type: <<print _pregnancyBirth.fetus[_args[1]].type[0].toUpperCase() + _pregnancyBirth.fetus[_args[1]].type.substring(1)>> |
			<</if>>
			Gender:
			<<switch _pregnancyBirth.fetus[_args[1]].gender>>
				<<case "m">>Male
				<<case "f">>Female
				<<case "h">>Hermaphrodite
			<</switch>>
			<br>
			Mother:
			<<if _pregnancyBirth.fetus[_args[1]].motherKnown>>
				<<print pregnancyNameCorrection(_pregnancyBirth.fetus[_args[1]].mother, true)>>
			<<else>>
				????
			<</if>>
			| Father:
			<<if _pregnancyBirth.fetus[_args[1]].fatherKnown>>
				<<print pregnancyNameCorrection(_pregnancyBirth.fetus[_args[1]].father, true)>>
			<<else>>
				????
			<</if>>
			<br>
			Size: <<print _pregnancyBirth.fetus[_args[1]].features.size>> | Hair Colour: <<hairmapcolourtext _pregnancyBirth.fetus[_args[1]].features.hairColour>>
			<<if _pregnancyBirth.fetus[_args[1]].features.skinColour>>
				| Skin Colour: <<skinColourName _pregnancyBirth.fetus[_args[1]].features.skinColour>>
			<</if>>
			<br>
			<<if _pregnancyBirth.fetus[_args[1]].features.identical>>
				Identical: <<print _pregnancyBirth.fetus[_args[1]].features.identical>>
				<br>
			<</if>>
			<label><<print '<<textbox "_pregnancyBirth.fetus['+_args[1]+'].name" `_pregnancyBirth.fetus['+_args[1]+'].name or ""`>>'>></label>
			<br>
			<span class="no-numberify">
				<<link "Random Name">>
					<<if _args[0] is "pc">>
						<<if $player.vaginaExist>>
							<<set _pregnancyNaming to $sexStats.vagina.pregnancy>>
						<<else>>
							<<set _pregnancyNaming to $sexStats.anus.pregnancy>>
						<</if>>
					<<elseif C.npc[_args[0]] and C.npc[_args[0]].pregnancy>>
						<<set _pregnancyNaming to C.npc[_args[0]].pregnancy>>
					<</if>>
					<<set _pregnancyNaming.fetus[_args[1]].name to generateBabyName(undefined, _pregnancyNaming.fetus[_args[1]].gender, _expectedChildId)>>
					<<replace `"#child-" + _args[1]`>><<birthChildElement _args[0] _args[1]>><</replace>>
				<</link>>
			</span>
			<small class="right">
				saveId: <<print $saveId>>
				<<if $saveName isnot "">>
					| name: <<print $saveName>>
				<</if>>
			</small>
		<</capture>>
	<<else>>

	<</if>>
<</widget>>

<<widget "wakingEffects">><<silently>>
	<<if !$sexStats.vagina.menstruation.running>>
	<<elseif _args[0] and $sexStats.vagina.menstruation.currentState is "pregnant" or ($sexStats.vagina.menstruation.currentState is "normal" and ($playerPregnancyHumanDisable is "f" or $playerPregnancyBeastDisable is "f"))>>
		<<set $_pregnancy to getPregnancyObject()>>
		<<set _wakingEffect to wakingPregnancyEvent()>>
		<<if Array.isArray(_wakingEffect)>>
			<<set _wakingEffect to _wakingEffect[random(0,_wakingEffect.length - 1)]>>
		<</if>>
		<<switch _wakingEffect>>
			<<case "tired">>
				<<set $_text_output to "You wake up feeling more tired than rested.<<tiredness 10>><<gtiredness>>">>
			<<case "crying">>
				<<set $_text_output to "You wake up in tears. You aren't even sure why you're crying, but the emotion quickly passes.">>
			<<case "angry">>
				<<set $_text_output to "You wake up feeling angry. The mood takes you by surprise, but soon passes.">>
			<<case "meatCraving">>
				<<set $_text_output to `You awaken to a strange craving ${V.wolfgirl >= 2 ? "of digging your fangs into" : "for"} something meaty.`>>
			<<case "foodCraving">>
				<<set $_text_output to `You awaken to a strange craving for something ${["sweet","spicy","sour","savory","bitter"][random(0,4)]}.`>>
			<<case "headache">>
				<<set $_text_output to "You wake up to your head throbbing. You're not sure what brought on this headache, but it eventually passes.">>
			<<case "sensitiveBreasts">>
				<<set $_text_output to "You wake to your <<breasts>> feeling more tender than normal. Thankfully, it passes.">>
			<<case "bloated">>
				<<set $_text_output to "You wake feeling a little bloated.">>
				<<set $daily.bloated to random(1,2)>>
			<<case "lightHeaded">>
				<<set $_text_output to "You wake feeling a little lightheaded for a moment.">>
			<<case "dizzy">>
				<<set $_text_output to "You wake feeling a little dizzy, but it passes quickly.">>
			<<case "mildNausea">>
				<<set $_text_output to "You wake feeling a little nauseous, but it passes quickly.">>
			<<case "nausea">>
				<<set $_text_output to "You wake feeling nauseous, but it passes after some time.">>
			<<case "dryheaving">>
				<<if $location is "wolf_cave">>
					<<set $_text_output to "You wake up feeling nauseous, causing you to scramble out of bed to the edge of the cave. You're forced to do a dry heave by it.<<stress 10>><<gstress>><<pain 1>><<gpain>>">>
				<<elseif $location is "farm">>
					<<set $_text_output to "You wake up feeling nauseous, causing you to scramble out of bed to the edge of the barn. You're forced to do a dry heave by it.<<stress 10>><<gstress>><<pain 1>><<gpain>>">>
				<<elseif $location is "tower">>
					<<set $_text_output to "You wake up feeling nauseous, causing you to scramble out of bed to the edge of the tower. You're forced to do a dry heave over it.<<stress 10>><<gstress>><<pain 1>><<gpain>>">>
				<<else>>
					<<set $_text_output to "You wake up feeling nauseous, causing you to scramble out of bed to a nearby bin. You're forced to do a dry heave into it.<<stress 10>><<gstress>><<pain 1>><<gpain>>">>
				<</if>>
				<<if $awareness gte 200 and $sciencetrait gte 4 and playerNormalPregnancyTotal() gte 1 and !$_pregnancy.awareOf>>
					<<set $_text_output += " <span class='red'>Maybe you should get tested</span>.">>
				<</if>>
			<<case "lightBabyKick">>
				<<set $_text_output to "You wake up feeling a light kick coming from your <<pregnancyBabyText 'pc'>>.<<stress -10>><<lstress>>">>
			<<case "babyKick">>
				<<set $_text_output to "You wake up feeling a kick coming from your <<pregnancyBabyText 'pc'>>.<<stress -10>><<lstress>><<pain 1>><<gpain>>">>
			<<case "babyMovement">>
				<<set $_text_output to "You wake up feeling your <<pregnancyBabyText 'pc'>> moving around.<<stress -10>><<lstress>>">>
			<<case "babyHiccup">>
				<<set $_text_output to "You wake up feeling some baby hiccups.<<stress -10>><<lstress>>">>
			<<case "earlyContractions">>
				<<set $_text_output to "You wake up to a brief and sporadic contraction.<<stress 5>><<gstress>><<pain 1>><<gpain>>">>
			<<case "bellySize">>
				<<set $_text_output to "You wake and take a look at your growing belly. It finally hits you; you're pregnant.">>
				<<if $_pregnancy.potentialFathers.length is 1>>
					<<set $_fatherName to pregnancyNameCorrection($_pregnancy.potentialFathers[0].source)>>
					<<set $_text_output += " <span class='lewd'>It's clear that "+ ($_fatherName === "yourself" ? "you are" : $_fatherName + " is") +" the father.</span>">>
				<<else>>
					<<set $_text_output += " <span class='red'>You wonder who the father is.</span>">>
				<</if>>
				<<set $_pregnancy.awareOf to true>>
			<<case "missedPeriod">>
				<<set $_text_output to "You wake and come to a realisation. Your current cycle is late.">>
				<<if $awareness gte 200 and $sciencetrait gte 4 and playerNormalPregnancyTotal() gte 1 and !$_pregnancy.awareOf>>
					<<set $_text_output += "You wonder if you're pregnant again. <span class='red'>Maybe you should get tested</span>.">>
				<</if>>
				<<set $sexStats.vagina.awareOfPeriodDelay to true>>
			<<case "clothesRemoval">>
				<<set $_text_output to `<span class="red">You wake up to a heavy pressure on your body.</span> `>>
				<<set $_slots to ["genitals","under_upper","upper","under_lower","lower"]>>
				<<set $_broken to []>>
				<<set $_removed to []>>
				<<for $_slot range $_slots>>
					<<if $worn[$_slot].type.includes("constricting")>>
						<<if $worn[$_slot].cursed>>
							<<if $worn[$_slot].name is "gold chastity belt" and $worn[$_slot].integrity gt 0>>
								<<set $_goldenCB to true>>
								<<set $antiquemoney += Math.floor(2000 / ($worn.genitals.integrity / clothingData('genitals',$worn.genitals,'integrity_max')))>>
							<<else>>
								<<set $_broken.pushUnique($worn[$_slot].name)>>
							<</if>>
							<<set $worn[$_slot].type.push("broken")>>
							<<generalRuined $_slot>>
						<<else>>
							<<set $_removed.pushUnique($worn[$_slot].name)>>
							<<generalUndress "wardrobe" $_slot>>
						<</if>>
					<</if>>
				<</for>>
				<<if $_removed.length gte 1>>
					<<set $_text_output += "You scramble to remove your " + formatList($_removed, "and", true) + ". ">>
				<</if>>
				<<if $_broken.length gte 1>>
					<<set $_text_output += "You look down to see your " + formatList($_broken, "and", true) + " broken. ">>
				<</if>>
				<<if $_goldenCB>>
					<<set $_text_output += `Loosened by your growing belly, your gold chastity belt clatters to the ground once you apply some pressure. <span class="blue">A collector might be interested by it.</span> `>>
				<</if>>
				<<set $_text_output += `<br><span class="red">Your pregnant body no longer supports such clothing.</span> <<pain 2>><<gpain>>`>>
		<</switch>>
	<</if>>
	<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "pregnancyDailyEvent">><<silently>>
	<<if !["Asylum Sleep","Cabin Sleep","Wolf Cave Sleep","Bird Tower Sleep","Livestock Sleep","Farm Abduction wake 4","Sleep","Avery Hotel Morning","Avery Hotel Trauma Drink 2","Prison Sleep","Robin Trauma Visit Sleep","Pound Sleep","Robin Sleep"].includes($passage)>>
		<<set _pregnancyDailyEvent to dailyPregnancyEvent(_rng)>>
		<<if Array.isArray(_pregnancyDailyEvent)>>
			<<set _pregnancyDailyEvent to _pregnancyDailyEvent[random(0,_pregnancyDailyEvent.length - 1)]>>
		<</if>>
		<<switch _pregnancyDailyEvent>>
			<<case "tired">>
				<<set $_text_output to "You yawn. Everything seems to take more effort than usual.<<tiredness 2>><<gtiredness>>">>
			<<case "crying">>
				<<set $_text_output to "You suddenly burst into tears. You aren't even sure why you're crying, but the sadness passes as quickly as it came.<<stress 5>><<gstress>>">>
			<<case "angry">>
				<<set $_text_output to "You feel angry out of nowhere. The change in mood takes you by surprise, but it soon passes.<<stress 5>><<gstress>>">>
			<<case "meatCraving">>
				<<set $_text_output to `You have a sudden, strange craving ${V.wolfgirl >= 2 ? "of digging your fangs into" : "for"} something meaty.`>>
			<<case "foodCraving">>
				<<set $_text_output to `You have a sudden, strange craving for something ${["sweet","spicy","sour","savory","bitter"][random(0,4)]}.`>>
			<<case "cramping">>
				<<set $_text_output to `You feel some cramping around the lower part of your stomach.<<stress 5>><<gstress>><<pain 5>><<gpain>>`>>
			<<case "bloated">>
				<<set $_text_output to "You feel a little bloated.<<stress 3>><<gstress>>">>
				<<set $daily.bloated to random(1,2)>>
			<<case "lightHeaded">>
				<<set $_text_output to "You feel a little lightheaded for a moment.">>
			<<case "dizzy">>
				<<set $_text_output to "You start feeling a little dizzy, but it passes quickly.">>
			<<case "mildNausea">>
				<<set $_text_output to "You start feeling a little nauseous, but it passes quickly.">>
			<<case "nausea">>
				<<set $_text_output to "You start feeling nauseous, but it passes after some time.">>
			<<case "lightBabyKick">>
				<<set $_text_output to "You feel a light kick coming from your <<pregnancyBabyText 'pc'>>.<<stress -10>><<lstress>>">>
			<<case "babyKick">>
				<<set $_text_output to "You feel a kick coming from your <<pregnancyBabyText 'pc'>>.<<stress -10>><<lstress>><<pain 1>><<gpain>>">>
			<<case "babyMovement">>
				<<set $_text_output to "You feel your <<pregnancyBabyText 'pc'>> moving around.<<stress -10>><<lstress>>">>
			<<case "babyHiccup">>
				<<set $_text_output to "You feel some baby hiccups.<<stress -10>><<lstress>>">>
			<<case "earlyContractions">>
				<<set $_text_output to "You feel a brief and sporadic contraction.<<stress 5>><<gstress>>">>
		<</switch>>
		<<if _pregnancyDailyEvent>>
			<<run delete $daily.pregnancyEvent>>
		<<else>>
			<<if !$daily.pregnancyEvent>>
				<<set $daily.pregnancyEvent to 0>>
			<</if>>
			<<set $daily.pregnancyEvent += 15>>
		<</if>>
	<</if>>
	<</silently>><<if $_text_output>><<print $_text_output>><br><</if>>
<</widget>>

/*ToDo: Pregnancy Story Content: Lacks content, small unique events for when the player's stress passes out due to their pregnancy*/
<<widget "pregnancyWatersBrokenPassout">>
	<<set $_pregnancy to getPregnancyObject()>>
	<<if $_pregnancy.fetus>>
		<<set $_pregnancy.waterBreaking to false>>
		/*ToDo: Pregnancy - fill out for specific pregnancy passout events*/
		/*Area specific passout text for alternative pregnancy birth events*/
		<<switch _args[0]>>
			<<case "asylum">>
				<<if $asylumstate is "sleep">>
					<<endevent>>
					<<generate1>><<person1>>
					Locked in for the night, you sit down on your bed. When you sit, it feels wet. Your thighs seem to be covered in a clear liquid. You're going into labour.
					<br><br>

					Clearing your throat, you waddle over to the door. Through the hole in the door you call out. Guards patrol the halls, it shouldn't take long.
					<br><br>

					Your calls are ignored long enough for a dull pain to begin to pang in your pelvis. "I said quiet after lights out!" The guard doesn't believe you.
					<br><br>

					Refusing to give up, you bang on the door until your hands hurt. This gets the guard to come over and look in. 
					<br><br>

					"Lay down on your bed, I'll fetch Doctor Harper," <<he>> instructs you with a flat tone. You do as <<he>> says. You wince and shiver from the ache in your body as you try to stay awake.
					<br><br>

					Consciousness falls away from you.
				<<else>>
					You sit down on your bed, trying to stay stable. When you sit, it feels wet. Your thighs seem to be covered in a clear liquid. You're going into labour.
					<br><br>

					You waddle over to the door, stumbling as you exit. A nurse quickly rushes to your side. "Easy there, hon. I've got you. We're going to go down slowly, okay?"
					<br><br>

					The nurse helps you sit, and calls out for assistance. Your consciousness fades.				
				<</if>>
			<<case "asylumOutside">>
				<<endevent>>
				<<generate1>><<person1>>
				"You should have really gone to the toilet," A fellow patient sneers at you as <<he>> passes. Confused, <<if $worn.lower.type.includes("naked")>>you look down to see wetness drip down your thigh<<else>>you look down to find a wet patch forming on your $worn.lower.name<</if>>.
				<br><br>

				"The baby is coming," you gasp. The sharp pain is unexpected as you clutch your stomach.
				<br><br>

				The passing patient halts, <<his>> eyes growing wide as <<he>> turns back. "Wait here, I'll find someone!"
				<br><br>

				Out of the corner of your eye you see the patient running up to some orderlies. You choose to focus on breathing through the pain.
				<br><br>

				You blink. People are surrounding you, a stretcher laid out on the ground. A gentle hand guides you forwards.
				<br><br>

				The same hand supports you as you pass out.
			<<case "asylumCafe">>
				<<endevent>>
				<<generate1>><<person1>>				
				You groan as you hunch over, a hand pressed to your belly. It feels like pressure releases inside of you. Clear liquid drips down your thighs.
				<br><br>

				Patients turn to look at you, some coming close, some backing away. The commotion causes the guards to come closer. 
				<br><br>

				"<<pShe>>'s 'avin a baby!" A <<person>> calls out. The guards scramble towards you now, pushing patients out of the way.
				<br><br>

				They help you to walk, keeping people out of the way as you are led somewhere. You quickly lose track of where you are, and your vision fades.
			<<case "asylumLibrary">>
				<<endevent>>
				<<generate1>><<person1>>
				The chair you sit on begins to feel wet. Reaching down, you find that the wetness is coming from you. You're going into labour.
				<br><br>

				A <<person>> notices your wet fingers. <<He>> jumps forward, pulling the book away from you. "Don't damage the books!"<br>
				"I wasn't. My- my baby is coming," you stutter, taking a deep breath to calm down.
				<br><br>

				The <<person>> doesn't seem to believe you. <<He>> continues to berate you until an orderly approaches to settle the dispute.
				<br><br>

				The orderly takes in your hunched over body before swearing. <<He>> calls over more to help. Some have to hold the <<person>> back as you are picked up and led away from the library. 
				<br><br>

				Your consciousness fades.
			<<case "asylumHarper">>
				<<endevent>><<npc "Harper">><<person1>>
				You feel uneasy as you step into the doctor's office. Harper takes notice, coming around <<his>> desk to feel your forehead. <<He>> examines you, looking over your body before taking notice of the gradual wetness between your legs.
				<br><br>

				"Oh dear. We'll have to delay today's session. It seems your bun is ready to leave the oven."
				<br><br>

				Harper calls in orderlies to assist you as you begin to breathe heavily. Pain gradually builds in your abdomen.
				<br><br>

				You can hear Harper speaking but words become jumbled as your mind focuses on the pain.
				<br><br>

				Someone moves you, supporting you by the arms as you are led... somewhere. Everything fades.
			<<case "forest" "lake">>
				You stumble, barely managing to stabilise yourself against a large tree trunk. You look down to see a clear liquid dripping down your leg. You're going into labour.
				<br><br>

				You involuntarily whimper. Even the effort of staying standing is causing a burning pain. A branch cracks to your left.
			<<case "tentacleworld" "tentacleforest">>
				You hunch over in pain. All of the tentacles retreat away from you. You fall to your knees, gripping the ground as hard as you can.
				<br><br>

				The sky flickers. As you let out a pained scream, it fades away.
			<<case "farmroad">>
				<<if $location is "farm" and $_pregnancy.potentialFathers.find(father => father.source === "Alex")>>
					/*Alex can help here*/
				<<else>>

				<</if>>
			<<case "remy">>
				<<if $outside is 1>>
					A
					<<if ($monsterchance gte 1 and ($hallucinations gte 1 or $monsterhallucinations is "f"))>>
						<<set $monster to 1>>
						<<if maleChance() lt random(1, 100)>>cowgirl<<else>>bullboy<</if>>
					<<else>>
						cow
					<</if>>
					nudges at your thigh and moos. You look down to find a clear liquid dripping down your leg before a brief pain spreads in your lower abdomen. You're going into labour. 
					<br><br>

					Gasping, you slowly sit down. More <<livestock_cows>> gather, curious to the commotion.
					<<if $monster is 1>>
						One yells. "Baby! <<pHer>> baby is coming!"
					<<else>>
						"What the hell are they doing?" A farmhand calls out from the other side of the field.
					<</if>>
					<br><br>

					A couple of farmhands notice the odd behaviour and make their way over. They find you breathing slowly as you cradle your stomach.
					"Ah shit, this one's ready to pop! Go get Remy!" The pain increases and you slowly lie down as the farmhand crouches beside you. 
					<br><br>

					You faintly hear boots crushing grass and more yelling as your vision fades.
				<<else>>
					<<endevent>>
					<<generate1>><<person1>>
					The hay you're sitting on feels uncomfortably wet. Looking down you find that more wetness is coming from you. You're going into labour.
					<br><br>

					You try to remain calm, breathing deeply and slowly, but soon the first contraction hits and you yell out. 
					<br><br>

					"What's that?"<br>
					"Ignore it, just a dumb cow looking for attention." The farmhands continue to ignore you.
					<br><br>
					
					Another contraction hits, you yell out once more. This time someone comes to check. 
					"You're meant to be quiet-" <<he>> grunts before <<his>> eyes widen. "Get Remy! Now! This one's ready to pop!"
					You hear a commotion begin as the world slowly fades to black. 
				<</if>>
			<<case "remyAbduction">>
			<<case "remyHarperExam">>
			<<case "remyNiki">>
			<<case "moor">>
			<<case "castle">>
				<<npc "Great Hawk">>
				You double over in pain, and see a clear liquid dripping down your leg. You're going into labour. You look around in desperation and let out a pained yell, before stumbling to your side.
				<br><br>

				Your eyes close. When they open again, you're met with the face of the <<beasttype>>.
				<<if $monster is 1>>
					<<bHe>> says something to you, but the words sound like gibberish.
				<<else>>
					<<bHe>> eyes you with curiosity and concern.
				<</if>>
				<<bHis>> wings start to beat. You feel yourself being lifted onto something feathery. The next time you open your eyes, you're high in the air. You immediately black out from the shock.
				<br><br>

				You feel a rise in your stomach. You open your eyes again to see the hospital below you, and feathers in the corner of your vision.
				You blink, and you're suddenly being lowered. Your feet meet the sidewalk. A rush of air follows, and the <<beasttype>> is gone.
			<<case "wraith">>
				You double over in pain, and see a clear liquid dripping down your leg. You're going into labour. You look around in desperation and let out a pained yell, before stumbling to your side. You feel hopelessly trapped. Your heart pounds in your ears.
				<br><br>

				Your eyes close. When they open again, a pair of <<wraithEyes>> eyes stare into yours. "<span class="wraith">Suffering. Life. Beautiful.</span>"
				<br><br>

				You're unable to resist as it enters your body. Your pain ceases at once. You let out a long sigh of relief, and stand up. Your consciousness slowly fades as your body trudges forwards.
				<br><br>

				You feel cold. Then warm again. Then there's nothing. Until you open your eyes, and see the hospital before you. The pain returns. A pale face meets yours. "<span class="wraith">Beautiful. Keep them safe.</span>"
			<<case "dungeon">>
				/* Needs to account for Robin also being in the dungeon */
				<<endevent>>
				<<generate1>><<person1>>
				<<dungeonescape>>
				Shifting on the floor, you wince when you feel a wetness gather below you. It seems to be coming from you. You're going into labour. 
				<br><br>

				Panicked, you look around the barren room for an escape. With no other option, you bang on the door. "H-help please! My baby is coming!" You yell out as you pound on the door. You aren't sure if anyone will hear you. 
				<br><br>

				You keep calling out, not sure how long it takes before you hear the lock turn. A disgruntled <<person>> walks through, ready to yell before <<he>> sees your predicament. 
				<br><br>

				"Wait," <<he>> snarls, leaving you alone once more. The pain gets too much and you crawl to the dirty mattress to lay down.
				<br><br>

				Your vision fades as the door screeches open once more. 
			<<case "alley">>
			<<case "arcade">>
			<<case "beach">>
			<<case "bus">>
			<<case "docksSneak">>
			<<case "docks">>
			<<case "home">>
			<<case "hospital">>
			<<case "trash">>
			<<case "sea">>
			<<case "shop">>
			<<case "monsterTower">>
			<<case "street">>
			<<case "compound">>
			<<case "temple">>
				You stumble, barely catching yourself on a pew. Your legs tremble. You're going into labour.
				<br><br>

				A pair of strong arms hoist you up, before gently laying you down on a pew.
				<<if C.npc.Jordan.init is 1>>
					Jordan's face hovers over you.
				<<else>>
					A robed figure hovers over you, their youthful face betraying concern. Locks of hair protrude from the sides of their cowl, betraying a golden shade.
				<</if>>
				You hear words being spoken to you, but they don't make any sense. Other robed figures start to surround you.
				<<if _sydney_location is "temple" and C.npc.Sydney.init is 1>>
					Sydney breaks through the crowd, but stops short of you.
				<</if>>
				<br><br>

				You feel yourself being lifted.
			<<case "cave">>
			<<case "prison">>
				You stumble to your knees. There's no mistaking it; you're going into labour. You scream as the first contraction hits.
				<br><br>
				<<if $prison.schedule is "lockdown">>
					You spot a pair of boots approaching. They stop right in front of you. You look up.
					<br><br>

					<<generate_anxious_guard 0>><<person1>>
					Its <<anxious_guard 0>>. <<He>> frowns down at you.
					<br><br>

					"You're not supposed to be out of your cell." <<He>> looks around nervously. "Let's just get you back with no fuss, alright?"
					<br><br>

					<<He>> waits for you to get up, but the pain is far too much. <<anxious_guard 0>> takes a moment to realise that you're in pain. Your panic spreads to <<him>>.
					<br><br>

					"Oh no. Not here." <<He>> looks around again, as if praying for someone to swoop in and save <<him>>. "Look... D-Don't move! Stay right there!"
					<br><br>

					<<He>> hurries off, leaving you behind. You struggle to pull yourself upright, your vision swimming from the amount of pain coursing through your abdomen. The world fades away just as you hear someone yell.
				<<else>>
					Your heart pounds in your eardrums. Your vision starts to fade as pain rip through you over and over. You look up, to see yourself surrounded.
					<br><br>

					"Give <<phim>> some space, now!" A voice yells, just loud enough for it to cut through your haze. The world fades away as you feel yourself being lifted.
				<</if>>
			<<case "prisonCell">>
				<<if $prison.schedule is "lockdown">>
					You sit down on your bed in the dark cell. It feels wet. It takes you a moment to realise your legs are also wet. You're going into labour.
					<br><br>

					Panic grips you.
					<br><br>

					You stumble towards your cell door and start banging on it. "H-Help me!" You try to get a guard to notice you. 
					It takes a few seconds of your banging for prisoners to start waking up. Some shout at you to shut up, others ignore you. One calls out to ask if you're okay.
					<br><br>

					<<generate_veteran_guard 0>><<person1>>
					<<veteran_guard 0 cap>> appears after a moment, banging on each cell door as <<he>> makes his way down. "Lights out! That means shut it!"
					<br><br>

					<<He>> eventually stops in front of your cell and scowls at you. 
					"Do you know the punishment for being unruly-" <<He>> cuts <<himself>> off as <<he>> notices the mess between your legs.
					<br><br>

					"P-Please help me." You whisper, your vision already becoming blurry. 
					<<veteran_guard 0 cap>> immediately gets <<his>> keys out and unlocks your door. Strong arms catch you as your knees buckle, pain shooting through your stomach. The world fades away as you are carried out of your cell. 
				<<else>>
					The sound of something wet splattering against the stone floor of your cell catches your attention. Your legs are wet. You're going into labour.
					<br><br>

					You start to panic and try to make your way out of the cell to get help. A sharp pain in your stomach has you hunching over and hanging onto the bars.
					<br><br>

					<<generate1>><<person1>>
					"Please help me!" You call down the hallway. A prisoner comes over, smirking, but stops at the sight of you. 
					"Shit." <<He>> backs up and runs back down the way <<he>> came, hopefully to get help. 
					<br><br>

					The other prisoners walk past, ignoring you or stopping to watch for entertainment. Only a few try to help you. One is about to lean down to help you to your feet when <<he>> sees someone approaching and steps away again.
					<<endevent>>
					<<generate_methodical_guard 0>><<person1>>
					<<methodical_guard 0 cap>> arrives with the prisoner in tow. The crowd thins out immediately as <<he>> frowns down at you. <<He>> crouches down and inspeacts you to see for <<himself>>.
					<br><br>

					"Incredibly inconvenient timing," <<He>> remarks. "We aren't equipped with a delivery room, so we'll have to make do."
					<br><br>

					<<methodical_guard 0 cap>> stands back up and orders two of the prisoners to help you walk. You are half carried, half dragged down the stairs. The guard begins to talk into <<his>> walkie talkie.
					Your vision starts to blur as you're carried down another floor. You are not able to make out the shouts around you as you pass out.
				<</if>>
			<<case "prisonLaundry">>
				<<if $prison.schedule is "work">>
					<<generate1>><<person1>>
					You can hear a prisoner snicker behind you. 
					"Good thing we're in the laundry room, huh?" <<He>> smirks at you. "Just need a helping hand to clean you up."
					<br><br>

					You tremble, and a sudden pain shoots through you. You're going into labour. The prisoner steps closer, leering at you.
					<br><br>

					"Hey, back up. Now," a voice orders. 
					
					<<generate_relaxed_guard 1>><<person2>>
					<<relaxed_guard 1 cap>> comes up behind you, and the prisoner scowls but leaves to do <<person1>><<his>> work. <<person2>><<He>> looks down at your legs but doesn't get to ask anything. Pain shoots through your stomach again, and you hunch over. 
					<br><br>

					"H-Help... My baby...” you whimper out.
					<br><br>

					<<relaxed_guard 1 cap>> takes your elbow, propping you up.
					<br><br>

					"The kid's a bit too young to start doing time, eh? C'mon. Specs will have my head if you pop the little squirt out in here." You can barely hear <<his>> voice. Pain makes your head throb and you struggle to keep upright. Everything fades away.
				<<else>>
					You look down. There's clear liquid running down your thighs. Pain lurches in your stomach. You're in labour.
					<br><br>

					"Someone?" You call out as you struggle to get to the door. "I n-need help!" You lean against the door frame.
					<br><br>
					<<generate_relaxed_guard 0>><<person1>>
					"Work hours are over." <<relaxed_guard 0 cap>> walks over, still playing with <<his>> dice. "Not gonna turn on the machines unless you're prepared to entertain me-"
					<br><br>

					<<His>> eyes drop down to your legs. <<His>> grin starts to fade as <<he>> realises what's going on.
					<br><br>

					"Shit." <<relaxed_guard 0 cap>> looks around before putting an arm around your waist. "C'mon, we're not popping out Prisoner 144 junior out here."
					<br><br>

					You struggle not to black out, the pain in your stomach getting worse. <<relaxed_guard 0 cap>> says something to you but you're already too pained to hear it. The world fades away, and you're barely able to hear someone start to panic. 
				<</if>>
			<<case "prisonCanteen">>
			<<case "prisonMedical">>
				<<generate_methodical_guard 0>><<person1>>
				Pain begins to shoot through your stomach, and you grunt in pain. You're going into labour. It alerts <<methodical_guard 0>> <<he>> rushes over.
				<br><br>

				<<He>> wastes no time. <<methodical_guard 0 cap>> grips your bicep tightly and steers you towards one of the beds. 
				"You're in labour," <<He>> tells you. You barely get to sit down on the bed before another surge of pain has you hunching over. 
				<br><br>

				You're thankful for the bed under you as you fall back, struggling to breathe in properly. While the prison was not where you wanted to have your baby, at least you're in the medical room.
				<br><br>

				You start feeling dizzy from the pain. You're gently lowered back into a laying position as your consciousness slips.
			<<case "prisonYard">>
			<<case "prisonBeach">>
			<<case "prisonShowers">>
			<<case "pound">>
				<<run delete $pound.door>>
				<<endevent>>
				Staring out from between the bars, you shift uncomfortably. Greater levels of wetness pool beneath you onto the concrete. You're going into labor.
				<br><br>

				You hear whines from the kennels next to yours. The other <<pound_text>> can smell what is happening. 
				<br><br>

				"Hello?" You call out, clutching the bars of the kennel. You can't give birth here.
				<br><br>

				Minutes pass with no one coming to help. Your calls get more insistent as pain gradually spreads throughout your lower body.
				The <<pound_text>> around you whine louder and louder until they begin to bark and growl in response to your pained gasps. The commotion is enough to make someone come and check.
				<br><br>

				<<generate1>><<person1>>
				A <<person>> makes <<his>> way down the kennels. <<He>> yells and hits the bars while shining a torch inside. <<He>> pauses when <<he>> reaches you.
				<br><br>

				"Oh, fuck!" <<he>> shouts before dashing out of the kennels. You aren't sure if help is coming, and the pain is getting too much to stay lucid.
				<br><br>

				It all becomes too much. Your eyes flutter shut, commotion ringing in your ears.
			<<case "edencabin">>
				<!--
				<<if $_pregnancy.potentialFathers.find(father => father.source === "Eden")>>
					Eden thinks it's his child?
				<<else>>
				<</if>>
				-->
				<<endevent>>
				Your thighs feel wet, and you start to feel a sharp pain. You're going into labour.
				<<if $edenbed is 1>>
					Eden is still sleeping soundly.
				<<elseif Time.hour gte 11 and Time.hour lte 14>>
					Eden is out hunting, <<nnpc_he "Eden">> can't help you right now.
				<<else>>
					Eden is busy with <<nnpc_his "Eden">> own chores and hasn't noticed your panic.
				<</if>>
				<<if $worn.neck.collared is 1 and $worn.neck.type.includes("leash")>>
					<<detach_leash>>
					You desperately tug at your leash, hoping it will break. A few last stubborn threads hold on. Panicked, you begin to gnaw at the threads. Relief floods you when it breaks. 
				<</if>>
				<br><br>

				You stumble into the forest as the pain of your contractions begins. You're not even sure where you're going.
				<<if $syndromeeden is 1>>
					You're about to turn back to the cabin, when a branch cracks to your left.
				<<else>>
					You walk an unknown distance before you pause, too exhausted to continue, the adrenaline fading from your body. A branch cracks to your left.
				<</if>>
			<<case "drain">>
			<<case "school">>
			<<case "schoolLibrarian">>
				/*Wake up while being put in an ambulance?*/
			<<case "adultShop">>
			<<case "office">>
			<<case "island">>
				<<endevent>>
				You're going into labor.
				<br><br>
				A spasm of pain wracks your body, and you cry out.
				<br><br>

				Figures emerge from the trees, weapons held ready. They lower them when they see your state, and their motions become panicked.
				<br><br>
				<<if $islander_language gte 100>>
					"I think <<pshe>> going into labor,"
					<br>
					"Fuck! You're right!"
					<br>
					"Get the druids, now!"
				<<elseif $islander_language gte 50>>
					They call for help. It's strange, but in your pain you can almost determine the meaning behind their words. It floats at the edge of awareness.<<gggcomprehension>><<islander_language 30>>
				<<else>>
					They shout something in their incomprehensible language. It's strange, but in your pain you feel the meaning behind them. They're calling for help.<<gggcomprehension>><<islander_language 30>>
				<</if>>
				<br><br>
				The figures fade into fog as you pass out.
			<<default>>
				With your waters broken, you're too weak to continue.
		<</switch>>
		<br><br>

		/*Links for alternative pregnancy birth events*/
		<<switch _args[0]>>
			<<case "asylum" "asylumOutside" "asylumCafe" "asylumLibrary" "asylumHarper">>
				<<link [[Next|Pregnancy Birth Asylum]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<case "prison" "prisonCell" "prisonLaundry" "prisonSpire" "prisonCanteen" "prisonMedical" "prisonYard" "prisonBeach" "prisonShowers">>
				<<link [[Next|Pregnancy Birth Prison]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<case "tentacleworld">>
				<<if $tentacleEntrance is "mirror">>
					You find yourself laying in front of your bedroom mirror. Everything fades to black.
					<br><br>

					<<link [[Next|Pregnancy Birth Hospital Passout]]>><<set $stress -= 5000>><<endevent>><</link>>
				<<else>>
					You scream. You're met with your own echoing voice. Again and again, you scream until your throat is hoarse. <span class="red">No one comes for you.</span> <<trauma 50>><<gggtrauma>>
					<br><br>

					Overwhelmed by pain and fear, you black out.
					<br><br>

					<<link [[Next|Pregnancy Birth Asylum]]>><<set $stress -= 5000>><<endevent>><</link>>
				<</if>>
			<<case "tentacleforest" "hookah">>
				<<if _noWake>>
					You're caught off guard by a sudden pain. A contraction. You've gone into labour. You stumble to the floor.
					<br><br>

					Your vision quickly fades, and when it returns, you feel as though time has passed.
					<br><br>
				<<else>>
					You snap awake in the parlor.
				<</if>>
				<<if $hookah_state is 1>>
					<<loadNPC 0 "hookah">><<person1>>
					The hookah <<hookah_master>>'s face is right above you, looking concerned. <<He>> barks orders around.
					<br><br>

					"...and open that window. Air it out in here for <<phim>>. Jiggle the lock. It's supposed to be hard to open! Yes, yes, you'll get a full refund..."
					<br><br>

					<<His>> voice becomes distant, and darkness creeps into the corners of your vision as the pain of a contraction hits you. Your own scream is the last thing you hear.
				<<else>>
					Someone is pounding on the door. Your vision starts to fade again to the sound of sirens.
				<</if>>
				<br><br>

				<<link [[Next|Pregnancy Birth Hospital Rescue]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<case "forest" "edencabin">>
				<<if $_pregnancy.type is "wolf">>
					<<beastNEWinit 1 wolf>>
					<<if $monster is 1>>
						A <<beasttype>> approaches you, rushing to your side and putting <<bhis>> arms behind you for support.
						<<if $syndromewolves is 1>>
							You've seen <<bhim>> at the cave before. "<<pPackbrother>>'s pups are coming," <<bhe>> says. "Hurry." <<bHe>> lets you lean against <<bhim>> as you waddle your way home.
						<<else>>
							You don't know why, but you feel safe going with <<bhim>>. "Your pups are coming," <<bhe>> says. "You'll be safe with my pack." <<bHe>> lets you lean against <<bhim>> as you waddle your way towards what you hope is safety.
						<</if>>						
					<<else>>
						A <<beasttype>> approaches you, nuzzling your hand.
						<<if $syndromewolves is 1>>
							You've seen <<bhim>> at the cave before. You lean against <<bhis>> back as you limp home together.
						<<else>>
							You don't know why, but you feel safe going with <<bhim>>. You lean against <<bhis>> back as you limp towards what you hope is safety.
						<</if>>
					<</if>>
					It's difficult to keep moving through the pain. Eventually your legs give out, your vision following soon after,
					<<if $monster is 1>>but strong arms holding you keep you from harm.<<else>>but you fall gently onto soft fur.<</if>>
					<br><br>

					<<link [[Next|Pregnancy Birth Wolf Rescue]]>><<set $stress -= 5000>><<endevent>><</link>>
				<<else>>
					<<endevent>>
					<<generate1>><<person1>>
					You hear a <<personsimple>>'s voice. "Are you okay, there?" <<he>> asks as <<he>> approaches. <<He>> looks vaguely familiar. There's an axe along <<his>> back. You think you stopped and talked to <<him>> as <<he>> was chopping wood once.
					<br><br>

					You're barely able to talk as another contraction hits, more painful than the previous ones. The woods<<personsimple>> takes off <<his>> coat and gently puts it over your shoulders. 
					<br><br>
					
					"Come on, lean on me. I'll take you to the hospital." Your vision fades before you can take the next step.
					<br><br>

					<<link [[Next|Pregnancy Birth Hospital Rescue]]>><<set $stress -= 5000>><<endevent>><</link>>
				<</if>>
			<<case "edencabin">>
				<!--
				<<if $_pregnancy.potentialFathers.find(father => father.source === "Eden")>>
					Alternative place to give birth?
					<<link [[Next|Pregnancy Birth Hospital Passout]]>><<set $stress -= 5000>><<endevent>><</link>>
				<<else>>
					<<link [[Next|Pregnancy Birth Hospital Passout]]>><<set $stress -= 5000>><<endevent>><</link>>
				<</if>>
				-->
			<<case "remy" "remyAbduction" "remyHarperExam" "remyNiki">>
				<<link [[Next|Pregnancy Birth Livestock]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<case "farmroad">>
				<<if $location is "farm" and $_pregnancy.potentialFathers.find(father => father.source === "Alex")>>
					/*Alternative place to give birth?*/
					<<link [[Next|Pregnancy Birth Hospital Passout]]>><<set $stress -= 5000>><<endevent>><</link>>
				<<else>>
					<<link [[Next|Pregnancy Birth Hospital Passout]]>><<set $stress -= 5000>><<endevent>><</link>>
				<</if>>
			<<case "dungeon" "pound" "temple">>
				<<link [[Next|Pregnancy Birth Hospital Rescue]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<case "hospital">>
				<<link [[Next|Pregnancy Birth Hospital]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<case "island">>
				<<link [[Next|Pregnancy Island]]>><<set $stress -= 5000>><<endevent>><</link>>
			<<default>>
				<<link [[Next|Pregnancy Birth Hospital Passout]]>><<set $stress -= 5000>><<endevent>><</link>>
		<</switch>>
	<<else>>
		Error Pregnancy Object not found in the passage '<<print $passage>>'.
	<</if>>
<</widget>>

<<widget "pregnancyMorningAfterPill">>
	<<set $_menstruation to $sexStats.vagina.menstruation>>
	<<set $_pregnancy to getPregnancyObject()>>
	<<set _morningAfterPillResult to "no pregnant">> /* This variable returns the result of taking the pill */
	<<if $_menstruation.currentState is "pregnant">>
		<<if $_pregnancy.type is "human">>
			<<set _currentDay to $_pregnancy.timer / (1 / ((1 / 9) * $humanPregnancyMonths))>>
		<<elseif $_pregnancy.type is "wolf">>
			<<set _currentDay to $_pregnancy.timer / (1 / ((1 / 12) * $wolfPregnancyWeeks))>>
		<<else>>
			<<set _currentDay to 1000>>
			<<set _morningAfterPillResult to "unknown type">>
		<</if>>
		<<if _currentDay lte 2>> /* the first 2 days the pill clears the pregnancy and restarts the menstrual cycle */
			<<set $_pregnancy.type to null>>
			<<set $_pregnancy.fetus to []>>
			<<set $_pregnancy.waterBreaking to false>>
			<<set $_pregnancy.waterBreakingTimer to null>>
			<<set $_pregnancy.timer to null>>
			<<set $_pregnancy.timerEnd to null>>
			<<set $_pregnancy.awareOf to null>>
			<<set $_pregnancy.awareOfMultiple to null>>
			<<set $_pregnancy.awareOfDetails to null>>
			<<set $_pregnancy.potentialFathers to []>>
			<<set $sexStats[($player.vaginaExist ? "vagina" : "anus")].sperm to []>>
			<<restartMenstruationCycle>>
			<<set $_menstruation.currentState to "normal">>
			<<set _morningAfterPillResult to "successful">>
		<<elseif _currentDay lte 3>>
			<<set $_pregnancy.type to null>>
			<<set $_pregnancy.fetus to []>>
			<<set $_pregnancy.waterBreaking to false>>
			<<set $_pregnancy.waterBreakingTimer to null>>
			<<set $_pregnancy.timer to null>>
			<<set $_pregnancy.timerEnd to null>>
			<<set $_pregnancy.awareOf to null>>
			<<set $_pregnancy.awareOfMultiple to null>>
			<<set $_pregnancy.awareOfDetails to null>>
			<<set $_pregnancy.potentialFathers to []>>
			<<set $sexStats[($player.vaginaExist ? "vagina" : "anus")].sperm to []>>
			<<set $_menstruation.currentDay to .5>>
			<<restartMenstruationCycle>>
			<<set $_menstruation.currentState to "normal">>
			<<set _morningAfterPillResult to "a little late">>
		<<elseif _currentDay lte 4>>
			<<set $_pregnancy.type to null>>
			<<set $_pregnancy.fetus to []>>
			<<set $_pregnancy.waterBreaking to false>>
			<<set $_pregnancy.waterBreakingTimer to null>>
			<<set $_pregnancy.timer to null>>
			<<set $_pregnancy.timerEnd to null>>
			<<set $_pregnancy.awareOf to null>>
			<<set $_pregnancy.awareOfMultiple to null>>
			<<set $_pregnancy.awareOfDetails to null>>
			<<set $_pregnancy.potentialFathers to []>>
			<<set $sexStats[($player.vaginaExist ? "vagina" : "anus")].sperm to []>>
			<<set $_menstruation.currentDay to .5>>
			<<set $_menstruation.currentState to  "recovering">>
			<<set $_menstruation.recoveryTime to ($_pregnancy.type === "human" ? random(2, 3) * $humanPregnancyMonths : random(1, 2) * $wolfPregnancyWeeks)>>
			<<set $_menstruation.recoveryTimeStart to $_menstruation.recoveryTime>>
			<<set $_menstruation.recoveryStage to 0>>
			<<set $_menstruation.periodEnabled to false>>
			<<menstruationCycle>>
			<<set _morningAfterPillResult to "late">>
		<<else>>
			<<set _morningAfterPillResult to "too late">> /* It's too late, the pill does nothing to the pregnancy */
		<</if>>
	<<else>>
		<<set $sexStats[($player.vaginaExist ? "vagina" : "anus")].sperm to []>>
		<<set $_menstruation.currentDay to .5>> /* If the player isn't pregnant the pill only restarts the menstrual cycle and clears sperm*/
	<</if>>
<</widget>>

<<widget "pregnancyGendersText">><<silently>>
	<<set $_pregnancy to getPregnancyObject()>>
	<<set $_pregnancy.genderKnown to true>>
	<<set $_genders to {m:0,f:0,h:0}>>
	<<run $_pregnancy.fetus.forEach(b => $_genders[b.gender]++)>>
	<<if $_pregnancy.fetus[0].features.identical is true>>
		<<set $_text_output to `"I believe they are <<if $_pregnancy.fetus.length is 3>>all identical triplets<<else>>both identical twins<</if>>. They're the same gender and their facial features are similar."`>>
	<<elseif ($_genders.m is $_pregnancy.fetus.length or $_genders.f is $_pregnancy.fetus.length or $_genders.h is $_pregnancy.fetus.length) and $_pregnancy.fetus.length gt 1>>
		<<set $_text_output to `"Despite being the same gender, I believe they are not identical. They appear to have slightly different facial features."`>>
	<<else>>
		<<set $_text_output to "You have">>
		<<if $_genders.m gt 0>>
			<<switch $_genders.m>>
				<<case 1>><<set $_text_output += " a">>
				<<default>><<set $_text_output += " " + $_genders.m>>
			<</switch>>
			<<set $_text_output += " baby boy">><<if $_genders.m gt 1>><<set $_text_output += "s">><</if>>
			<<if $_genders.f gt 0 and $_genders.h gt 0>>
				<<set $_text_output += ",">>
			<<elseif $_genders.f gt 0 or $_genders.h gt 0>>
				<<set $_text_output += " and">>
			<</if>>
		<</if>>
		<<if $_genders.f gt 0>>
			<<switch $_genders.f>>
				<<case 1>><<set $_text_output += " a">>
				<<default>><<set $_text_output += " " + $_genders.f>>
			<</switch>>
			<<set $_text_output += " baby girl">>
			<<if $_genders.f gt 1>><<set $_text_output += "s">><</if>>
			<<if $_genders.h gt 0>><<set $_text_output += " and">><</if>>
		<</if>>
		<<if $_genders.h gt 0>>
			<<switch $_genders.h>>
				<<case 1>><<set $_text_output += " a">>
				<<default>><<set $_text_output += " " + $_genders.h>>
			<</switch>>
			<<set $_text_output += " baby hermaphrodite">>
			<<if $_genders.h gt 1>><<set $_text_output += "s">><</if>>
		<</if>>
		<<set $_text_output += ".">>
	<</if>>
<</silently>><<if $_text_output>><<print $_text_output>><</if>>
<</widget>>

<<widget "babyType">><<silently>>
    <<if $_pregnancy.awareOfDetails || ((!_args[0] || _args[0] is "pc") and $_pregnancy.potentialFathers.every((father, index, array) => father.type === array[0].type))>>
        <<switch $_pregnancy.type>>
            <<case "human">>
                <<if $_pregnancy.fetus.length gt 1>>
                    <<set $_text_output to "babies">>
                <<else>>
                    <<set $_text_output to "baby">>
                <</if>>
            <<case "wolf">>
                <<if $_pregnancy.fetus.length gt 1>>
                    <<set $_text_output to "puppies">>
                <<else>>
                    <<set $_text_output to "puppy">>
                <</if>>
        <</switch>>
	<<elseif $_pregnancy.awareOfMultiple and $_pregnancy.fetus.length gt 1>>
		<<set $_text_output to "babies">>
    <<else>>
        <<set $_text_output to "baby">>
    <</if>>
<</silently>><<print $_text_output>>
<</widget>>

<<widget "pregnancyBabyText">><<silently>>
	<<if _args[0] isnot "pc" and C.npc[_args[0]] and C.npc[_args[0]].pregnancy.enabled isnot undefined>>
		<<set $_pregnancy to C.npc[_args[0]].pregnancy>>
	<<else>>
		<<set $_pregnancy to getPregnancyObject()>>
	<</if>>
	<<if $_pregnancy.awareOfDetails || ((!_args[0] || _args[0] is "pc") and $_pregnancy.potentialFathers.every((father, index, array) => father.type === array[0].type))>>
		<<set $_num to ($_pregnancy.awareOfDetails || $_pregnancy.awareOfMultiple ? $_pregnancy.fetus.length : 1)>>
		<<if $_pregnancy.awareOfDetails>>
			<<switch $_pregnancy.type>>
				<<case "human">>
					<<if $_num gt 1>>
						<<set $_text_output to ($_num is 3 ? "triplets" : "twins")>>
					<<else>>
						<<set $_text_output to "baby">>
					<</if>>
				<<case "wolf">>
					<<if $_num lte 3>>
						<<set $_text_output to ($_num is 1 ? "pup" : "pups")>>
					<<else>>
						<<set $_text_output to "litter">>
					<</if>>
				<<default>>
					<<set $_text_output to ($_num gt 1 ? "babies" : "baby")>>
			<</switch>>
		<<else>>
			<<set $_text_output to ($_pregnancy.awareOfMultiple && $_pregnancy.fetus.length gt 1 ? "babies" : "baby")>>
		<</if>>
	<<else>>
		<<set $_text_output to ($_pregnancy.awareOfMultiple && $_pregnancy.fetus.length gt 1 ? "babies" : "baby")>>
	<</if>>
<</silently>><<print $_text_output>><</widget>>

<<widget "npcPregnancyUpdater">>
	<<for $_i to 0; $_i lt $NPCNameList.length; $_i++>>
		<<set $_name to $NPCNameList[$_i]>>
		<<if $NPCName[$NPCNameList.indexOf($_name)].pregnancy is undefined>>
			<<set $NPCName[$NPCNameList.indexOf($_name)].pregnancy to {}>>
		<</if>>
		<<set $_pregnancy to $NPCName[$NPCNameList.indexOf($_name)].pregnancy>>
		<<if !setup.pregnancy.infertile.includes($_name) and setup.pregnancy.typesEnabled.includes($NPCName[$NPCNameList.indexOf($_name)].type) and
		(($incompletePregnancyDisable is "f" and $NPCName[$NPCNameList.indexOf($_name)].pregnancy.enabled is undefined and !setup.pregnancy.ignoresIncompeteCheck.includes($_name)) or 
		(setup.pregnancy.canBePregnant.includes($_name) and $NPCName[$NPCNameList.indexOf($_name)].pregnancy.enabled is undefined))>>
			<<set $_pregnancy.fetus to []>>
			<<set $_pregnancy.givenBirth to 0>>
			<<set $_pregnancy.totalBirthEvents to 0>>
			<<set $_pregnancy.timer to null>>
			<<set $_pregnancy.timerEnd to null>>
			<<set $_pregnancy.waterBreaking to null>>
			<<set $_pregnancy.npcAwareOf to null>>
			<<set $_pregnancy.pcAwareOf to null>>
			<<set $_pregnancy.type to null>>
			<<set $_pregnancy.enabled to true>>
			<<set $_pregnancy.cycleDaysTotal to random(24,32)>>
			<<set $_pregnancy.cycleDay to random(1,$_pregnancy.cycleDaysTotal)>>
			<<set $_pregnancy.cycleDangerousDay to 10>>
			<<set $_pregnancy.sperm to []>>
			<<set $_pregnancy.potentialFathers to []>>
			<<set $_pregnancy.nonCycleRng to [random(0,3),random(0,3)]>>
			<<switch $_name>>
				<<case "Kylar">><<set $_pregnancy.pills to "fertility">>
				/***remy mod*/
				<<case "Alex" "Wren">><<set $_pregnancy.pills to "contraceptive">>
				<<default>><<set $_pregnancy.pills to null>>
			<</switch>>
		<<elseif setup.pregnancy.infertile.includes($_name) or (!setup.pregnancy.canBePregnant.includes($_name) and $incompletePregnancyDisable isnot "f")>>
			/*For saves that have the variables set, but have no need to be there*/
			<<set $NPCName[$NPCNameList.indexOf($_name)].pregnancy to {}>>
		<</if>>
			/* 0 = never uses a condom, Kylar has a special exception
			* 50 = Will use a condom, but will refrain if asked
			* 100 = Always uses a condom, will not remove it
			*/
		<<if !$NPCName[$NPCNameList.indexOf($_name)].pregnancyAvoidance or $objectVersion.pregnancyAvoidance is undefined>>
			<<switch $_name>>
				<<case "Kylar" "Black Wolf" "Great Hawk" "Eden" "Ivory Wraith">><<set $NPCName[$NPCNameList.indexOf($_name)].pregnancyAvoidance to 0>>
				<<case "Robin" "Whitney" "Alex" "Wren" "Avery">><<set $NPCName[$NPCNameList.indexOf($_name)].pregnancyAvoidance to 50>>
				<<case "Remy">><<set $NPCName[$NPCNameList.indexOf($_name)].pregnancyAvoidance to 70>>
				<<default>><<set $NPCName[$NPCNameList.indexOf($_name)].pregnancyAvoidance to 100>>
			<</switch>>
		<</if>>
	<</for>>
	<<set $objectVersion.pregnancyAvoidance to 1>>
<</widget>>

/*ToDo: Pregnancy Story Content: Not used in events at the moment, add to appropriate story passages, when the player gives birth to their children*/
<<widget "earSlimePregnancy">>
	<<if _args[0] and $earSlime.corruption gte 80>>
		<<switch _args[0]>>
			<<case "human">><<set $_type to _args[1]? 'babies' : 'baby'>>
			<<case "wolf">><<set $_type to _args[1] ? 'wolf puppies' : 'wolf pup'>>
			<<default>><<set $_type to _args[1] ? 'babies' : 'baby'>>
		<</switch>>
		<<set $_babiesText to _args[1] ? `to some beautiful ${$_type}` : `to a beautiful ${$_type}`>>
		<<if $parasite.left_ear.name is "slime" and $parasite.right_ear.name is "slime">>
			<span class="green">A fulfilled warmth fills you.</span>
			You almost forget the strife of the world. You can tell it's the slimes in your ears, rewarding you for giving birth <<print $_babiesText>>.
			<<lllcorruption>><<lltrauma>><<llstress>><<trauma -24>><<stress -24>><<corruption `Math.floor($earSlime.corruption * -0.4)`>>
			<br><br>
		<<elseif $parasite.left_ear.name is "slime" or $parasite.right_ear.name is "slime">>
			<span class="green">A fulfilled warmth fills you.</span>
			You almost forget the strife of the world. You can tell it's the slime in your ear, rewarding you for giving birth <<print $_babiesText>>.
			<<llcorruption>><<ltrauma>><<lstress>><<trauma -12>><<stress -12>><<corruption `Math.floor($earSlime.corruption * -0.2)`>>
			<br><br>
		<</if>>
	<</if>>
<</widget>>

<<widget "fetishPregnancyImg">>
	<<if _playerIsNowPregnant or _npcIsNowPregnant>>
		<div class="impregnatedGrid">
			<<if _playerIsNowPregnant>>
				<div @class="$options.images is 1 ? 'impregnated' : ''">
					<div>
						<<if _playerIsNowPregnant is "pc">>
							<span class="lewd">You just got yourself pregnant.</span>
						<<else>>
							<span class="lewd"><<print pregnancyNameCorrection(_playerIsNowPregnant, true)>> just impregnated you.</span>
						<</if>>
					</div>
					<<if $options.images is 1>>
						<<if $player.vaginaExist>>
							<<set $_fCum to Math.clamp(setup.bodyliquid.combined("vagina"),1,5)>>
						<<else>>
							<<set $_fCum to Math.clamp(setup.bodyliquid.combined("anus"),1,5)>>
						<</if>>
						<img class="fertilization" @src="'img/sex/fertilization/fert' + $_fCum + '.gif'">
					<</if>>
				</div>
				<<unset _playerIsNowPregnant>>
			<</if>>
			<<if _npcIsNowPregnant>>
				<div @class="$options.images is 1 ? 'impregnated' : ''">
					<div><span class="lewd">You just impregnated <<print pregnancyNameCorrection(_npcIsNowPregnant)>>.</span></div>
					<<if $options.images is 1>><img class="fertilization" src="img/sex/fertilization/fert6.gif"><</if>>
				</div>
				<<earnFeat "First Fatherhood">>
				<<unset _npcIsNowPregnant>>
			<</if>>
		</div>
	<</if>>
<</widget>>
